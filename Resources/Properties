# OGNL
ognl.helperFunctions=true
ognl.inlineBindings=true

# Misc
er.extensions.stackTrace.cleanup=true

# EOF
er.extensions.ERXEC.safeLocking=true
er.extensions.ERXEC.useSharedEditingContext=false
er.extensions.ERXEnterpriseObject.applyRestrictingQualifierOnInsert=true
er.extensions.ERXEnterpriseObject.updateInverseRelationships=true
#dbConnectURLGLOBAL=
#dbConnectUserGLOBAL=
#dbConnectPasswordGLOBAL=

# Migrations
#er.migration.migrateAtStartup=true
#er.migration.createTablesIfNecessary=true
#er.migration.modelNames=YourModel

# Misc Components
#er.extensions.ERXWOForm.multipleSubmitDefault=true
#er.extensions.ERXWORepetition.checkHashCodes=true
#er.extensions.ERXWORepetition.raiseOnUnmatchedObject=true
#er.extensions.ERXWORepetition.eoSupport=true
#er.component.clickToOpen=true
#wolips.password=wo

# ERJavaMail
er.javamail.centralize=true
er.javamail.adminEmail=admin@yourhost.com
er.javamail.debugEnabled=false
er.javamail.smtpHost=your.smtpserver.com
er.javamail.smtpAuth=false
er.javamail.smtpUser=
er.javamail.smtpPassword=

# Log4j Configuration
# log4j.loggerFactory=er.extensions.logging.ERXLogger$Factory
# log4j.rootCategory=INFO,A1
# log4j.appender.A1=er.extensions.logging.ERXConsoleAppender
# log4j.appender.A1.layout=er.extensions.logging.ERXPatternLayout
# log4j.appender.A1.layout.ConversionPattern=%d{MMM dd HH:mm:ss} %$[%#] %-5p %c %x - %m%n
# 
# # Log4j Categories
# # Here are a few log4j sub-categories that are interesting.
# # Don't forget that in developement mode this file will get reloaded
# # everytime it changes, so if you say want to turn adaptor debugging
# # on in the middle of the app simply set the below category to debug.
# # Very handy.
# # Base Category
# log4j.logger.er=INFO
# 
# # ERExtensions
# # Transaction - Switching this to debug will start the sql ouputting.
# log4j.logger.er.transaction.adaptor.EOAdaptorDebugEnabled=DEBUG
# 
# # Fixes - Turning this on will show all the models that are loaded
# log4j.logger.er.extensions.fixes.ERSharedEOLoader=INFO
# 
# er.extensions.ERXNSLogLog4jBridge=INFO
# #log4j.logger.er.eo.ERXGenericRecord=DEBUG
# #log4j.logger.er.validation.ERXEntityClassDescription=DEBUG
# #log4j.logger.er.default.ERXEntityClassDescription=DEBUG
# log4j.logger.er.extensions.ERXDatabaseContextDelegate=WARN
# log4j.logger.er.extensions.ERXConfigurationManager=INFO
# #log4j.logger.er.extensions.ERXApplication.RequestHandling=DEBUG

#########################################################################
# Logging Config
#########################################################################
# Pattern codes:
# %-5p : Priority DEBUG, INFO, WARN, etc.
# %d(ISO08601 : Date and time
# %t : Thread
# %c : Logger name (usually a class name)
# %m%n : Log message arguments

# Available levels are DEBUG, INFO, WARN, ERROR, FATAL

# log4j appender and formatting
# log4j.rootLogger= WARN, A1 A2, myMail
log4j.loggerFactory=er.extensions.logging.ERXLogger$Factory

# A1 is a ConsoleAppender
log4j.appender.A1=er.extensions.logging.ERXConsoleAppender
log4j.appender.A1.layout=er.extensions.logging.ERXPatternLayout
#log4j.appender.A1.layout.ConversionPattern=%-5p %d{HH:mm:ss} (%-20c:%L) %x -%m%n
log4j.appender.A1.layout.ConversionPattern=%r %-5p [%t] (%C{3}, %M, %L) - %n%m%n%n

# A2 is a DailyRollingFileAppender
log4j.appender.A2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A2.file=/var/log/webobjects_apps/@@build.app.bundle.name@@-@@WOPort@@.log
log4j.appender.A2.datePattern='.'yyyy-MM-dd
log4j.appender.A2.append=true
log4j.appender.A2.layout=er.extensions.logging.ERXPatternLayout
log4j.appender.A2.layout.ConversionPattern=%-5p %d{ISO8601} [%t] (%c: %L) - %m%n

# myMail is the SMTPAppender
log4j.appender.myMail=org.apache.log4j.net.SMTPAppender
log4j.appender.myMail.Threshold=ERROR
log4j.appender.myMail.BufferSize=10
## See deploy/development scenario for this since I want emails to me for dev especially selenium tests
log4j.appender.myMail.From=StringTools@greenislandconsulting.com
log4j.appender.myMail.SMTPHost=@@app.smtpserver@@
log4j.appender.myMail.Subject=Log4jError (@@build.app.bundle.name@@ @@host@@ @@WOPort@@)
log4j.appender.myMail.layout=er.extensions.logging.ERXPatternLayout
# log4j.appender.myMail.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
log4j.appender.myMail.layout.ConversionPattern=%W%n%r %-5p %d{ISO8601}%n%n%V{t total/u used/f free}%n%n[%t] %n%n (%C, %M, %F:%L) - %n%n%m%n

# Project Wonder logger configuration
# ---------------------------
#log4j.logger.er=INFO
er.extensions.ERXNSLogLog4jBridge=INFO
#log4j.logger.er.eo.ERXGenericRecord=DEBUG
#log4j.logger.er.extensions.ERXGenericRecord=DEBUG
#log4j.logger.er.validation.ERXEntityClassDescription=DEBUG
#log4j.logger.er.default.ERXEntityClassDescription=DEBUG
#log4j.logger.er.javamail.ERMailDelivery=DEBUG
#log4j.logger.er.extensions.ERXMutableDictionary=DEBUG
#log4j.logger.er.extensions.logging.ERXLogger=DEBUG
#log4j.logger.er.extensions.ERXApplication.RequestHandling=DEBUG

# This sets the milliseconds required to identify a SQL statement for logging (ie., too long)
# I use ERROR setting only since it emits a stack trace which helps find which
# line of code caused the long SQL query
log4j.logger.er.extensions.ERXAdaptorChannelDelegate.sqlLogging=WARN

log4j.logger.er.transaction.adaptor.EOAdaptorDebugEnabled=INFO

ERXStatisticsStore request timer logging
er.extensions.ERXStatisticsStore.milliSeconds.warn=5000
er.extensions.ERXStatisticsStore.milliSeconds.error=15000
er.extensions.ERXStatisticsStore.milliSeconds.fatal=60000

log4j.logger.wk.webobjects.appserver.WKStatisticsStore = ERROR
